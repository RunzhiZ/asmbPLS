% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asmbPLSDA.cv.R
\name{asmbPLSDA.cv}
\alias{asmbPLSDA.cv}
\title{Cross-validation for asmbPLS-DA to find the best combinations of quantiles for prediction}
\usage{
asmbPLSDA.cv(
  X.matrix,
  Y.matrix,
  PLS.comp,
  X.dim,
  quantile.comb.table,
  outcome.type,
  Method,
  k = 5,
  ncv = 5,
  expected.accuracy.increase = 0.005,
  center = TRUE,
  scale = TRUE
)
}
\arguments{
\item{X.matrix}{Predictors matrix. Samples in rows, variables in columns}

\item{Y.matrix}{Outcome matrix. Samples in rows, this is a matrix with one 
column (binary) or multiple columns (more than 2 levels, dummy variables).}

\item{PLS.comp}{Number of PLS components in asmbPLS-DA.}

\item{X.dim}{A vector containing the number of predictors in each block 
(ordered).}

\item{quantile.comb.table}{A matrix containing user-defined quantile 
combinations used for CV, whose column number equals to the 
number of blocks.}

\item{outcome.type}{The type of the outcome Y. "\code{binary}" for binary 
outcome, and "\code{morethan2levels}" for categorical outcome with more than 2 
levels.}

\item{Method}{Decision rule used for CV. For binary outcome, the 
methods include "\code{fixed_cutoff}", "\code{Euclidean_distance_X}" and
"\code{Mahalanobis_distance_X}". For categorical outcome with more than 2 
levels, the methods include "\code{Max_Y}", "\code{Euclidean_distance_X}",
"\code{Mahalanobis_distance_X}", "\code{Euclidean_distance_Y}", and 
"\code{PCA_Mahalanobis_distance_Y}".}

\item{k}{The number of folds of CV procedure. The default is 5.}

\item{ncv}{The number of repetitions of CV. The default is 5.}

\item{expected.accuracy.increase}{The accuracy you expect to increase after 
including one more PLS component, which will affect the selection of optimal 
PLS components. The default is 0.005.}

\item{center}{A logical value indicating whether weighted mean center should 
be implemented for \code{X.matrix} and \code{Y.matrix}. The default is TRUE.}

\item{scale}{A logical value indicating whether scale should be 
implemented for \code{X.matrix}. The default is TRUE.}
}
\value{
\code{asmbPLSDA.cv} returns a list containing the following components:
\item{quantile_table_CV}{A matrix containing the selected quantile 
combination and the corresponding accuracy of CV for each PLS component.}
\item{CV_results}{A list containing the details of the CV results for each PLS 
component.}
\item{CV_index}{A list containing the validation and training index for each 
cross validation fold.}
}
\description{
Function to find the best combinations of quantiles used for prediction via
cross-validation. Usually should be conducted before 
\code{\link[asmbPLS]{asmbPLSDA.fit}} to obtain the quantile combinations.
}
\examples{
## Use the example dataset
data(asmbPLSDA.cv.example)

## cv to find the best quantile combinations for model fitting (binary outcome)
cv.binary.results <- asmbPLSDA.cv(
X.matrix = asmbPLSDA.cv.example$X.matrix, 
Y.matrix = asmbPLSDA.cv.example$Y.matrix.binary, 
PLS.comp = asmbPLSDA.cv.example$PLS.comp, 
X.dim = asmbPLSDA.cv.example$X.dim, 
quantile.comb.table = asmbPLSDA.cv.example$quantile.comb.table, 
outcome.type = "binary", Method = "fixed_cutoff", k = 10, ncv = 5,
expected.accuracy.increase = 0.005, center = TRUE, scale = TRUE)
quantile.comb.binary <- cv.binary.results$quantile_table_CV[,1:2]

## cv to find the best quantile combinations for model fitting 
## (categorical outcome with more than 2 levels)
cv.morethan2levels.results <- asmbPLSDA.cv(
X.matrix = asmbPLSDA.cv.example$X.matrix, 
Y.matrix = asmbPLSDA.cv.example$Y.matrix.morethan2levels, 
PLS.comp = asmbPLSDA.cv.example$PLS.comp, 
X.dim = asmbPLSDA.cv.example$X.dim, 
quantile.comb.table = asmbPLSDA.cv.example$quantile.comb.table, 
outcome.type = "morethan2levels", Method = "Max_Y", k = 10, ncv = 5,
expected.accuracy.increase = 0.005, center = TRUE, scale = TRUE)
quantile.comb.morethan2levels <- cv.morethan2levels.results$quantile_table_CV[,1:2]
 
## asmbPLSDA fit (binary outcome)
asmbPLSDA.binary.results <- asmbPLSDA.fit(
X.matrix = asmbPLSDA.cv.example$X.matrix, 
Y.matrix = asmbPLSDA.cv.example$Y.matrix.binary, 
PLS.comp = asmbPLSDA.cv.example$PLS.comp, 
X.dim = asmbPLSDA.cv.example$X.dim, 
quantile.comb = quantile.comb.binary,
"binary")

## asmbPLSDA fit (categorical outcome with more than 2 levels)
asmbPLSDA.morethan2levels.results <- asmbPLSDA.fit(
X.matrix = asmbPLSDA.cv.example$X.matrix, 
Y.matrix = asmbPLSDA.cv.example$Y.matrix.morethan2levels, 
PLS.comp = asmbPLSDA.cv.example$PLS.comp, 
X.dim = asmbPLSDA.cv.example$X.dim, 
quantile.comb = quantile.comb.morethan2levels,
"morethan2levels")

}
